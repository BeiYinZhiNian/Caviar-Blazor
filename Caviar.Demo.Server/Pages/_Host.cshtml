@page "_Host"
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Caviar.AntDesignUI
@using Caviar.Infrastructure
@using Caviar.SharedKernel
@using Microsoft.Extensions.Options

@inject IOptions<HybridOptions> HybridOptions
@{
    var hybridType = HybridOptions?.Value?.HybridType ?? HybridType.HybridOnNavigation; 
}
<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <title>HybridBlazor: @hybridType</title>
    <base href="/" />
    <link href="css/app.css" rel="stylesheet" />
    <link href="css/bootstrap/bootstrap.min.css" rel="stylesheet" />
</head>

<body>

    @if (hybridType.ToString().StartsWith("Hybrid"))
    {
        <srvr-app>
            <component type="typeof(Caviar.AntDesignUI.App)" render-mode="ServerPrerendered" />
            <persist-component-state />
        </srvr-app>
        <wasm-app style="display: none;">
            <component type="typeof(Caviar.AntDesignUI.App)" render-mode="WebAssembly">
        </wasm-app>
    }

    <script>
        window.hybridType = '@hybridType';
        window.getHybridType = function () { return window.hybridType; }
    </script>

    @if (hybridType == HybridType.ServerSide)
    {
        <app>
            <component type="typeof(Caviar.AntDesignUI.App)" render-mode="ServerPrerendered" />
            <persist-component-state />
        </app>
        <script src="_framework/blazor.server.js"></script>
    }
    else if (hybridType == HybridType.WebAssembly)
    {
        <app>
            <component type="typeof(Caviar.AntDesignUI.App)" render-mode="WebAssemblyPrerendered">
        </app>
        <script src="_framework/blazor.webassembly.js"></script>
    }
    else
    {
        <script src="Caviar.js"></script>
    }

    <div id="blazor-error-ui">
        An unhandled error has occurred.
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

</body>

</html>