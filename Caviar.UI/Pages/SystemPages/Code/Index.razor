@page "/Code/Index"
<pre>
<code class="lang-javascript">
        function init(){
            $scope.req.getArticle();
            $('pre code').each(function(i, block) {
                hljs.highlightBlock(block);
            });
        }
</code>
</pre>

<div>
    <Steps Current="current">
        @foreach (var item in steps)
        {
            <Step Title="@item.Title" Subtitle="@item.Content" />
        }
    </Steps>

    <div class="steps-content">
        @switch (current)
        {
            case 0:
                <Table TItem="ModelData" DataSource="@Models">
                    <Selection CheckStrictly />
                    <Column @bind-Field="@context.Name">
                    </Column>
                    <Column @bind-Field="@context.DisplayName">
                    </Column>
                </Table>
                break;
            case 1:
                <CheckboxGroup Style="margin-bottom:16px;margin-top:16px;" Options="@plainOptions" Value="@(new[]{"Apple"})" OnChange="OnChange" />
                break;
            case 2:
                <pre>
                <code class="lang-javascript">
        function init(){
            $scope.req.getArticle();
            $('pre code').each(function(i, block) {
                hljs.highlightBlock(block);
            });
        }
                </code>
            </pre>
                break;
            case 3:
                <Result Status="success"
                        Title="代码生成完毕"
                        SubTitle="代码生效需要关闭程序重新编译运行">
                    <Extra>
                        <Button Type="primary" OnClick='()=> { navigation.NavigateTo("/"); }'>返回首页</Button>
                        <Button OnClick='()=> { current = 0; }'>继续生成</Button>
                    </Extra>

                </Result>
                break;
            default:
                break;
        }
    </div>
    <div class="steps-action">
        <Space>
            <SpaceItem>
                @if (current > 0 && current<steps.Length-1)
                {
                    <Button Type="primary" OnClick="OnPreClick">上一步</Button>
                }
            </SpaceItem>
            <SpaceItem>
                @if (current < steps.Length - 2)
                {
                    <Button Type="primary" OnClick="OnNextClick">下一步</Button>
                }
            </SpaceItem>
            <SpaceItem>
                @if (current == steps.Length - 2)
                {
                    <Button Type="primary" Danger OnClick=@(() => { OnNextClick(); })>
                        生成
                    </Button>
                }

            </SpaceItem>
        </Space>
        
        
        
    </div>
</div>

<style>
    .steps-content {
        margin-top: 16px;
        border: 3px dashed #e9e9e9;
        border-radius: 6px;
        background-color: #fafafa;
        text-align: center;
    }

    .steps-action {
        margin-top: 24px;
    }
</style>

@inject NavigationManager navigation
@code {

    public class StepItem
    {
        public string Title { get; set; }
        public string Content { get; set; }
    }

    public int current { get; set; } = 0;

    public StepItem[] steps =
    {
        new StepItem {Title = "选择生成模块", Content = ""},
        new StepItem {Title = "选择需要的功能", Content = ""},
        new StepItem {Title = "查看代码", Content = ""},
        new StepItem {Title = "生成结果", Content = ""}
    };

    void OnPreClick()
    {
        current--;
    }
    void OnNextClick()
    {
        current++;
        JSRuntime.InvokeVoidAsync("test");
    }

}