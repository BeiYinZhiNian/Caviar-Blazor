@page "/Menu/add"


<Form Model="@model">
    <FormItem Label="菜单名称">
        <Input @bind-Value="@context.MenuName" />
    </FormItem>
    <FormItem Label="菜单类型">
        <RadioGroup @bind-Value="@context.MenuType" OnChange="Callback">
            <Radio Value="(MenuType)0">目录</Radio>
            <Radio Value="(MenuType)1">菜单</Radio>
            <Radio Value="(MenuType)2">按钮</Radio>
        </RadioGroup>
    </FormItem>
    <FormItem Label="请求地址" Style="@visibility">
        <Input @bind-Value="@context.Url">
    </FormItem>
    <FormItem Label="打开方式">
        <RadioGroup @bind-Value="@context.TargetType">
            <Radio Value="(TargetType)0">当前页面</Radio>
            <Radio Value="(TargetType)1">弹出窗口</Radio>
            <Radio Value="(TargetType)2">新建页面</Radio>
        </RadioGroup>
    </FormItem>
    <FormItem Label="图标">
        <Button type="@ButtonType.Primary" OnClick="OpenIconModal">图标库</Button>
    </FormItem>
    <FormItem Label="上层目录">

    </FormItem>
    <FormItem Label="排列顺序">
        <Input @bind-Value="@context.Order" Style="width: 20%;">
    </FormItem>
</Form>


<Modal Visible="@_visible"
       OnOk="HandleOk"
       OnCancel="HandleCancel"
       Title="请选择图标">
    <IconPanel></IconPanel>
</Modal>
@code{
    bool _visible = false;

    string visibility = "display:none;";
    EventCallback<MenuType> Callback => EventCallback.Factory.Create<MenuType>(this, CheckMenuType);

    public void CheckMenuType()
    {
        if (model.MenuType == 0)
        {
            visibility = "display:none;";
            model.Url = "";
        }
        else
        {
            visibility = "";
        }
    }

    public void OpenIconModal()
    {
        _visible = true;
    }

    private void HandleOk(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

    RenderFragment _content =
    @<IconPanel></IconPanel>;
}