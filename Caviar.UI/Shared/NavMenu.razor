<Menu Mode="MenuMode.Inline"
      Accordion="false"
      Theme="MenuTheme.Dark"
      @bind-OpenKeys="@OpenKeysNav"
      InlineCollapsed="InlineCollapsed"
      Selectable="false"
      OnMenuItemClicked="OnMenuItemClickedNav">
    @if (SysPowerMenus != null)
    {
        var menu = GetSubMenu(SysPowerMenus);
        @menu
    }
</Menu>

@code {
    RenderFragment GetSubMenu(List<ViewPowerMenu> viewPowerMenus)
    {
        RenderFragment ViewSubMenu = null;
        if (viewPowerMenus == null || viewPowerMenus.Count == 0) return ViewSubMenu;
        foreach (var item in viewPowerMenus)
        {
            RenderFragment subTitle =
            @<span>
            @if (!string.IsNullOrEmpty(item.Icon))
            {
                <Icon Type="@item.Icon" Theme="outline"></Icon>
            }
            <span>@item.MenuName</span>
            </span>;
            switch (item.MenuType)
            {
                case MenuType.Catalog:
                     ViewSubMenu +=
                     @<SubMenu TitleTemplate="subTitle">
                     @GetSubMenu(item.SonMenu)
                     </SubMenu>;
                     break;
                case MenuType.Menu:
                ViewSubMenu += @<MenuItem Key="@item.MenuName" RouterLink="@item.Url">@subTitle</MenuItem>;
                    break;
                default:
                    break;
            }
        };
        return ViewSubMenu;
    }
}


