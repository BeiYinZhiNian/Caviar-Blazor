@page "/CodeGeneration/CodeFileGenerate"
@using System.Text.Json
<div>
    <Steps Current="current">
        @foreach (var item in steps)
        {
            <Step Title="@item.Title" Subtitle="@item.Content" />
        }
    </Steps>
    <div class="steps-action">
        <Space>
            <SpaceItem>
                @if (current > 0 && current < steps.Length - 1)
                {
                    <Button Type="@ButtonType.Primary" OnClick="OnPreClick">上一步</Button>
                }
            </SpaceItem>
            <SpaceItem>
                @if (current < steps.Length - 2 && current > 0)
                {
                    <Button Type="@ButtonType.Primary" OnClick="OnNextClick">下一步</Button>
                }
            </SpaceItem>
            <SpaceItem>
                @if (current == steps.Length - 2)
                {
                    <Button Type="@ButtonType.Primary" Danger OnClick=@(() => { OnGenerateClick(); })>
                        生成
                    </Button>
                }

            </SpaceItem>
        </Space>



    </div>
    <div class="steps-content">
        @switch (current)
        {
            case 0:
                if (Entitys != null && Entitys.Count!=0)
                {
                    var Source = Entitys.Select(u => u.Entity);
                    <Table TItem="SharedKernel.Entities.SysFields" DataSource="@Source">
                        <Column @bind-Field="@context.FieldName">
                        </Column>
                        <Column @bind-Field="@context.FullName">
                        </Column>
                        <Column @bind-Field="@context.DisplayName">
                    </Column>
                    <ActionColumn Title="操作">
                        <Space Size=@("middle")>
                            <SpaceItem>
                                <Button Type="@ButtonType.Primary" OnClick='()=>
                                                                            {
                                                                                GenerateData.EntitieName = context.FieldName;
                                                                                GenerateData.FullName = context.FullName;
                                                                                OnNextClick();
                                                                            }'>选择</Button>
                            </SpaceItem>
                        </Space>
                    </ActionColumn>

                    </Table>
                }
                break;
            case 1:
                <div style="margin-bottom:16px;margin-top:16px;">
                    <Form Model="@GenerateData" @ref="GenerateFrom">
                        <Space Direction="DirectionVHType.Vertical" Size="@("large")">
                            <FormItem>
                                <AntDesign.Input Disabled="true" @bind-Value="@context.EntitieName">
                                </AntDesign.Input>
                            </FormItem>
                            <FormItem>
                                <AntDesign.Input Placeholder="XX管理" @bind-Value="@context.LabelName">
                                </AntDesign.Input>
                            </FormItem>
                            <FormItem Label="生成内容">
                                <Checkbox @bind-Value="@context.IsGenerateController">控制器</Checkbox>
                                <Checkbox @bind-Value="@context.IsGenerateIndex">列表页面</Checkbox>
                                <Checkbox @bind-Value="@context.IsGenerateDataTemplate">数据模板页面</Checkbox>
                                <Checkbox @bind-Value="@context.IsGenerateViewModel">页面模型</Checkbox>
                            </FormItem>
                            <FormItem>
                                <Switch @bind-Value="@context.IsCover" />
                            </FormItem>
                        </Space>

                    </Form>
                </div>
                break;
            case 2:
                <Tabs DefaultActiveKey="1" @bind-ActiveKey="@nKey">
                    @foreach (var item in lstTabs)
                    {
                        <TabPane Key="@item.KeyName" Tab="@item.TabName">
                            <ChildContent>
                                <CavHighlightedCode Code="@item.Content" CanLoad="true" Language="csharp"></CavHighlightedCode>
                            </ChildContent>
                        </TabPane>
                    }
                </Tabs>
                break;
            case 3:
                <Result Status="@ResultStatus"
                        Title="@ReusltTitle"
                        SubTitle="@ResultSubTitle">
                    <Extra>
                        <Button Type="@ButtonType.Primary" OnClick='()=> { navigation.NavigateTo("/"); }'>返回首页</Button>
                        <Button OnClick='()=> { current = 0; }'>继续生成</Button>
                    </Extra>

                </Result>
                break;
            default:
                break;
        }
    </div>

</div>

<style>
    .steps-content {
        margin-top: 16px;
        border: 3px dashed #e9e9e9;
        border-radius: 6px;
        @UserConfig.Background
        text-align: center;
    }

    .steps-action {
        margin-top: 24px;
    }
</style>

@inject NavigationManager navigation
@inject UserConfig UserConfig
@code {
    public class StepItem
    {
        public string Title { get; set; }
        public string Content { get; set; }
    }

    public int current { get; set; } = 0;

    public StepItem[] steps =
    {
        new StepItem {Title = "选择生成模块", Content = ""},
        new StepItem {Title = "功能配置", Content = ""},
        new StepItem {Title = "查看代码", Content = ""},
        new StepItem {Title = "生成结果", Content = ""}
    };

}