@*
    生成者：未登录用户
    生成时间：2021/5/31 10:49:32
    代码由代码生成器自动生成，更改的代码可能被进行替换
    界面如需更改，建议直接将内容剪切到自己的文件内，保留此空白文件
    菜单列表
*@
@using Caviar.SharedKernel.Entities
@namespace Caviar.AntDesignUI.Pages.Menu
@inherits DataComponentBase<SysMenuView,SysMenu>
@page "/SysMenu/CreateEntity"
@page "/SysMenu/UpdateEntity"
<Form @ref="_meunForm" 
    LabelColSpan="6"
    WrapperColSpan="16"
    Model="@DataSource" 
    OnFinish="FormSubmit" 
    ValidateMode="@FormValidateMode.Rules" 
    ValidateOnChange="true">
    <FormItem Label='@LanguageService[$"{CurrencyConstant.EntitysName}.Key"]'>
        <Input @bind-Value="@context.Entity.Key" Style="width:50%" />
    </FormItem>
    <FormItem Label='@LanguageService[$"{CurrencyConstant.EntitysName}.DisplayName"]'>
        <Input @bind-Value="@context.DisplayName" Style="width:50%" />
    </FormItem>
    <FormItem Label="@LanguageService[$"{CurrencyConstant.EntitysName}.Upper directory"]">
        <Dropdown>
            <Overlay>
                <Tree ShowIcon DataSource="SysMenus"
                      TitleExpression="x => x.DataItem.DisplayName"
                      ChildrenExpression="x => x.DataItem.Children"
                      IconExpression="x => x.DataItem.Entity.Icon"
                      IsLeafExpression="x => x.DataItem.Children?.Count == 0"
                      KeyExpression="x => x.DataItem.Id.ToString()"
                      OnClick='e=>EventRecord(e)'
                      TItem="SysMenuView">
                </Tree>
            </Overlay>
            <ChildContent>
                <Button OnClick="RemoveRecord">@ParentMenuName</Button>
            </ChildContent>
        </Dropdown>
    </FormItem>
    <FormItem Label="@LanguageService[$"{CurrencyConstant.EntitysName}.MenuType"]">
        <EnumRadioGroup TEnum="MenuType" @bind-Value="context.Entity.MenuType" 
        OnChange="EventCallback.Factory.Create<MenuType>(this, CheckMenuType)"
            Options="GetRadioOptions<MenuType>()"></EnumRadioGroup>
    </FormItem>
    <FormItem Label="@LanguageService[$"{CurrencyConstant.EntitysName}.ButtonPosition"]" Style="@buttonStrle">
        <EnumRadioGroup TEnum="ButtonPosition" @bind-Value="context.Entity.ButtonPosition" Options="GetRadioOptions<ButtonPosition>()"></EnumRadioGroup>
    </FormItem>
    <FormItem Label="@LanguageService[$"{CurrencyConstant.EntitysName}.Url"]" Style="@visibility">
        <Input @bind-Value="@context.Entity.Url">
    </FormItem>
    <FormItem Label="@LanguageService[$"{CurrencyConstant.EntitysName}.TargetType"]" Style="@visibility">
        <EnumRadioGroup TEnum="TargetType" @bind-Value="context.Entity.TargetType"  Options="GetRadioOptions<TargetType>()"></EnumRadioGroup>
    </FormItem>
    <FormItem Style="@buttonStrle">
        <Checkbox @bind-Value="@context.Entity.IsDoubleTrue">@LanguageService[$"{CurrencyConstant.EntitysName}.IsDoubleTrue"]</Checkbox>
    </FormItem>
    <FormItem Label="@LanguageService[$"{CurrencyConstant.EntitysName}.Icon"]">
        <Space>
            <SpaceItem>
                <Button OnClick="()=> { _visible = true; }">@LanguageService[$"{CurrencyConstant.EntitysName}.Icon Library"]</Button>
                <CavModalIcon @bind-IconValue="DataSource.Entity.Icon" @bind-Visible="_visible"></CavModalIcon>
            </SpaceItem>
            <SpaceItem>
                @if (!string.IsNullOrEmpty(DataSource.Entity.Icon))
                {
                    <Icon Type="@DataSource.Entity.Icon" Theme="outline"></Icon>
                }
            </SpaceItem>
        </Space>
    </FormItem>
    <FormItem Label="@LanguageService[$"{CurrencyConstant.EntitysName}.Number"]">
        <Input @bind-Value="@context.Entity.Number" Style="width: 20%;">
    </FormItem>
    <FormItem Label='@LanguageService[$"{CurrencyConstant.EntitysName}.DataId"]'>
    </FormItem>
</Form>

@code{

    bool _visible = false;

    string visibility = "display:none;";
    string buttonStrle = "display:none;";
    public void CheckMenuType()
    {
        switch (DataSource.Entity.MenuType)
        {
            case MenuType.Catalog:
                visibility = "display:none;";
                buttonStrle = "display:none;";
                DataSource.Entity.Url = "";
                DataSource.Entity.ButtonPosition = ButtonPosition.Default;
                DataSource.Entity.TargetType = TargetType.CurrentPage;
                break;
            case MenuType.Menu:
            case MenuType.API:
                buttonStrle = "display:none;";
                visibility = "";
                DataSource.Entity.ButtonPosition = ButtonPosition.Default;
                DataSource.Entity.TargetType = TargetType.CurrentPage;
                break;
            case MenuType.Button:
                visibility = "";
                buttonStrle = "";
                break;
            default:
                break;
        }
    }


}