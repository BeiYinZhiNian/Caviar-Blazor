@page "/Data/AdvancedQuery"


<Space Direction="DirectionVHType.Vertical">
    <SpaceItem>
        <Button Type="@ButtonType.Primary" OnClick="AddCondition">添加条件</Button>
    </SpaceItem>
    @{
        var count = 0;
        foreach (var item in QueryView.QueryModels)
        {
            var QueryModel = item.Value;
            var component = QueryModel.ComponentStatus;
            var i = count;
            count++;
            @if (i > 0)
            {
                <SpaceItem>
                    <Switch @bind-Value="component.AndOr" OnChange="u=>AndOr(QueryModel,u)" Style="width:50px" CheckedChildren="且" UnCheckedChildren="或" />
                </SpaceItem>
            }
            <SpaceItem>
                <Space>
                    <SpaceItem>
                        <SimpleSelect Placeholder="请选择查询的字段" @bind-Value="QueryModel.Key"
                              OnSelectedItemChanged="u=>OnSelectItem(item.Key,u)"
                              Style="width:120px">
                            <SelectOptions>
                                @if (Fields != null)
                                {
                                    foreach (var item in Fields)
                                    {
                                        if (item.IsPermission && item.Entity.IsPanel)
                                        {
                                            <SimpleSelectOption Value="@item.Entity.FieldName" Label="@item.DisplayName"></SimpleSelectOption>
                                        }
                                    }
                                }
                            </SelectOptions>
                        </SimpleSelect>
                    </SpaceItem>
                    <SpaceItem>
                        <EnumSelect Style="width:120px" TEnum="QueryModel.QuerType" @bind-Value="QueryModel.QuerTypes" />
                    </SpaceItem>
                    @{
                        var entityType = component.Field?.EntityType.ToLower();
                        if (component.Field != null && component.Field.IsEnum)
                        {
                            <SpaceItem>
                                <SimpleSelect 
                                Placeholder="请选择类型"
                                Style="width:120px">
                                    <SelectOptions>
                                        @foreach (var enumItem in component.Field.EnumValueName)
                                        {
                                            <SimpleSelectOption Value="@enumItem.Key.ToString()" Label="@enumItem.Value"></SimpleSelectOption>
                                        }
                                    </SelectOptions>
                                </SimpleSelect>
                            </SpaceItem>
                            
                        }
                        else
                        {
                            switch (entityType)
                            {
                                case "int32":
                                    var intValue = 0;
                                    try
                                    {
                                        intValue = int.Parse(QueryModel.Value);
                                    }
                                    catch { }
                                    <SpaceItem>
                                        <Input TValue="int" Value="intValue" OnChange="u=>OnValueChange(QueryModel,u)" Placeholder="请输入想要搜索的内容" />
                                    </SpaceItem>
                                    break;
                                case "boolean":
                                    if (string.IsNullOrEmpty(QueryModel.Value))
                                    {
                                        QueryModel.Value = "False";
                                    }
                                    else
                                    {
                                        try
                                        {
                                            component.IsCompleted = bool.Parse(QueryModel.Value);
                                        }
                                        catch { }
                                    }

                                    <SpaceItem>
                                        <Switch @bind-Value="component.IsCompleted" Style="width:50px" OnChange="u=>{
                                        OnValueChange(QueryModel,u);}" CheckedChildren="是" UnCheckedChildren="否" />
                                    </SpaceItem>
                                    break;
                                case "guid":
                                    <SpaceItem>
                                        <Input TValue="Guid" OnChange="u=>OnValueChange(QueryModel,u)" Placeholder="请输入想要搜索的内容" />
                                    </SpaceItem>
                                    break;
                                case "datetime":
                                case "datetimeoffset":
                                    DateTime? dateTimeValue = null;
                                    if (!string.IsNullOrEmpty(QueryModel.Value))
                                    {
                                        try
                                        {
                                            dateTimeValue = DateTime.Parse(QueryModel.Value);
                                        }
                                        catch { }
                                    }
                                    <SpaceItem>
                                        <DatePicker TValue="DateTime?" Value="dateTimeValue" OnChange="u=>OnDateTimeChange(QueryModel,u)" Picker="@DatePickerType.Date" />
                                    </SpaceItem>
                                    break;
                                default:
                                    <SpaceItem>
                                        <Input TValue="string" @bind-Value="QueryModel.Value" Placeholder="请输入想要搜索的内容" />
                                    </SpaceItem>
                                    break;
                            }
                        }
                        if (i > 0)
                        {
                            <SpaceItem>
                                <Button Type="@ButtonType.Dashed" OnClick="()=>RemoveCondition(item.Key)">移除</Button>
                            </SpaceItem>
                        }
                    }

                </Space>
            </SpaceItem>
        }
    }
</Space>