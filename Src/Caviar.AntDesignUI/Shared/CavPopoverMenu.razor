<Menu>
    <MenuItem OnClick="UserCenter">
        <a>
            @UserConfig.LanguageService[$"{CurrencyConstant.Page}.PersonalCenter"]
        </a>
    </MenuItem>
    <MenuItem OnClick="()=>NavigationManager.NavigateTo(UrlConfig.WebConfig)">
        <a>
            @UserConfig.LanguageService[$"{CurrencyConstant.Page}.WebConfig"]
        </a>
    </MenuItem>
    <MenuItem OnClick="ChangePassword">
        <a>
            @UserConfig.LanguageService[$"{CurrencyConstant.Page}.ChangePassword"]
        </a>
    </MenuItem>
    <MenuDivider />
    <MenuItem OnClick="BeginSignOut">
        @UserConfig.LanguageService[$"{CurrencyConstant.Page}.Logout"]
    </MenuItem>
</Menu>
@code {
    [Inject]
    UserConfig UserConfig{ get; set; }

    [Inject]
    IJSRuntime JSRuntime { get; set; }
    [Inject]
    HttpService Http { get; set; }
    [Inject]
    MessageService messageService { get; set; }
    [Inject]
    CavModal CavModal { get; set; }

    [Inject] 
    NavigationManager NavigationManager { get; set; }

    [Inject] HostAuthenticationStateProvider AuthStateProvider { get; set; }
    public void UserCenter()
    {
        NavigationManager.NavigateTo(UrlConfig.MyDetails);
    }

    public async void ChangePassword()
    {
        await CavModal.Create(UrlConfig.ChangePassword, UserConfig.LanguageService[$"{CurrencyConstant.Page}.ChangePassword"]);
    }

    private async Task BeginSignOut()
    {
        var result = await AuthStateProvider.Logout();
        NavigationManager.NavigateTo(JSRuntime, result);
    }
}
